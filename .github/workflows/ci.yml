name: CI

on:
  push:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'
  pull_request:
    branches: [main, develop]
    paths-ignore:
      - '**.md'
      - 'docs/**'
      - '.github/ISSUE_TEMPLATE/**'

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    env:
      NEXT_TELEMETRY_DISABLED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --ignore-scripts

      - name: Verify installation
        run: pnpm list --depth=0

      - name: Create .env.local for build
        run: |
          cat > .env.local << 'EOF'
          # CI Build ENV - Minimal values to pass build
          NEXT_PUBLIC_SUPABASE_URL=https://placeholder.supabase.co
          NEXT_PUBLIC_SUPABASE_ANON_KEY=placeholder-anon-key
          SUPABASE_SERVICE_ROLE_KEY=placeholder-service-role-key
          SUPABASE_DB_URL=postgresql://placeholder

          BREVO_API_KEY=ci-placeholder-brevo-key
          BREVO_SENDER="Kundenmagnetapp <no-reply@kundenmagnet-app.de>"
          BREVO_REPLY_TO=support@kundenmagnet-app.de
          BREVO_WEBHOOK_TOKEN=ci-webhook-token

          IP_HASH_PEPPER=ci-placeholder-pepper-change-in-production

          STRIPE_SECRET_KEY=sk_test_placeholder
          STRIPE_WEBHOOK_SECRET=whsec_placeholder
          NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_placeholder

          APP_BASE_URL=https://kundenmagnet-app.de

          QR_DEFAULT_COLOR=#000000
          QR_DEFAULT_SIZE=1024
          EOF

      - name: Run TypeScript check
        run: |
          echo "Running TypeScript compilation check..."
          pnpm typecheck

      - name: Run ESLint
        run: |
          echo "Running ESLint checks..."
          pnpm lint

      - name: Run Prettier check
        run: |
          echo "Running Prettier formatting check..."
          pnpm check

      - name: Build application
        run: |
          echo "Building Next.js application..."
          pnpm build
          echo "‚úÖ Build completed successfully"

      - name: Verify build output
        if: matrix.node-version == '20.x'
        run: |
          echo "Checking build output..."
          if [ -d ".next" ]; then
            echo "‚úÖ .next directory exists"
            echo "üìÅ Contents:"
            ls -la .next/ || echo "Directory exists but is empty"
            echo "üìä Size:"
            du -sh .next/ || echo "Cannot calculate size"
          else
            echo "‚ùå .next directory does not exist"
            exit 1
          fi

      - name: Upload build artifacts (optional)
        if: matrix.node-version == '20.x' && hashFiles('.next/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: next-build
          path: .next
          retention-days: 7
          if-no-files-found: warn
